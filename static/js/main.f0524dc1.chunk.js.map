{"version":3,"sources":["Components/filter/filter-styles.module.css","redux/action-types.js","redux/contacts-actions.js","Components/form/Form.js","Components/filter/Filter.js","Components/contacts-list/ContactList.js","redux/reducers.js","redux/store.js","App.js","reportWebVitals.js","index.js","Components/form/form-styles.module.css","Components/contacts-list/contactsList-styles.module.css"],"names":["module","exports","addContact","createAction","actionTypes","deleteContact","filter","connect","dispatch","toAddContact","data","actions","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","id","shortid","generate","className","s","form","label","input","type","pattern","title","required","value","onChange","target","btn","state","filterValue","toFilter","div","getFilteredContacts","normalizedFilter","toLocaleLowerCase","item","includes","contacts","onDeleteContact","list","map","contact","p","span","onClick","contactsReducer","createReducer","types","action","undefined","find","payload","alert","el","filterReducer","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","console","log","getState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f0524dc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"filter-styles_div__eV7Ek\",\"input\":\"filter-styles_input__7xbHg\",\"label\":\"filter-styles_label__QfRe6\"};","const ADD_CONTACT = 'addContact';\r\nconst DELETE_CONTACT = 'deleteContact';\r\nconst FILTER = 'filter';\r\n\r\nexport default { ADD_CONTACT, DELETE_CONTACT, FILTER };\r\n","import actionTypes from './action-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction(actionTypes.ADD_CONTACT);\r\n\r\nexport const deleteContact = createAction(actionTypes.DELETE_CONTACT);\r\n\r\nexport const filter = createAction(actionTypes.FILTER);\r\n\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './form-styles.module.css';\r\nimport * as actions from '../../redux/contacts-actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Form({ toAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const changeName = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const changeNumber = event => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = { name: name, number: number, id: shortid.generate() };\r\n    toAddContact(data);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>Name</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={changeName}\r\n      />\r\n      <label className={s.label}>Number</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={changeNumber}\r\n      />\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add to contacts\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toAddContact: data => dispatch(actions.addContact(data)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import PropTypes from 'prop-types';\r\nimport s from './filter-styles.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts-actions';\r\n\r\nconst Filter = ({ filterValue, toFilter }) => {\r\n  return (\r\n    <div className={s.div}>\r\n      <label className={s.label}>Find contacts by name</label>\r\n      <input\r\n        onChange={toFilter}\r\n        value={filterValue}\r\n        className={s.input}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterValue: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toFilter: event => dispatch(actions.filter(event.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport s from './contactsList-styles.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts-actions';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => {\r\n        const { name, number, id } = contact;\r\n        return (\r\n          <li key={id} className={s.item}>\r\n            <p className={s.p}>\r\n              {name} <span className={s.span}>{number}</span>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nconst getFilteredContacts = (data, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  const filteredNames = data.filter(item =>\r\n    item.name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return filteredNames;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => {\r\n  return {\r\n    contacts: getFilteredContacts(contacts, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import types from '../redux/action-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contactsReducer = createReducer(initialContacts, {\r\n  [types.ADD_CONTACT]: (state, action) => {\r\n    let similar = state.find((item) => item.name === action.payload.name);\r\n\r\n    if (similar !== undefined) {\r\n      alert(`${action.payload.name} is already in contacts.`);\r\n      return state;\r\n    } else return [...state, action.payload];\r\n  },\r\n\r\n  [types.DELETE_CONTACT]: (state, action) => {\r\n    return state.filter((el) => {\r\n      return el.id !== action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [types.FILTER]: (state, action) => {\r\n    return (state = action.payload);\r\n  },\r\n});\r\n\r\nexport { contactsReducer, filterReducer };\r\n\r\n// export default rootReducer;\r\n","import { contactsReducer, filterReducer } from './reducers';\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import logger from 'redux-logger';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//     filter: filterReducer,\r\n//   },\r\n// });\r\n\r\nexport { store, persistor };\r\n","import './App.css';\r\nimport Form from './Components/form/Form';\r\nimport Filter from './Components/filter/Filter';\r\nimport ContactList from './Components/contacts-list/ContactList';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nfunction App() {\r\n  console.log(store.getState());\r\n\r\n  return (\r\n    <div>\r\n      <Form />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default connect()(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-styles_label__12KYp\",\"input\":\"form-styles_input__1a25E\",\"form\":\"form-styles_form__38Uoh\",\"btn\":\"form-styles_btn__21mGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactsList-styles_list__2hefj\",\"item\":\"contactsList-styles_item__3kxLG\",\"span\":\"contactsList-styles_span__29gG_\",\"btn\":\"contactsList-styles_btn__1hdcT\",\"p\":\"contactsList-styles_p__2FqRQ\"};"],"sourceRoot":""}